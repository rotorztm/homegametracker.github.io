{"version":3,"sources":["components/Navigation.js","components/Friend.js","components/Friends.js","components/Party.js","components/Partys.js","containers/Home.js","components/Game.js","components/Games.js","Data/Data.js","containers/App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navigation","onRouteChanged","classes","AppBar","position","Toolbar","IconButton","onClick","edge","className","color","aria-label","Typography","variant","Button","display","rootFriendsEdit","flexDirection","friendsEdit","details","friendsEditDetails","friendsEditDetailsContent","flex","width","gap","content","cover","Friend","friend","mode","index","UpdateFriends","useState","updatedFriend","SetUpdatedFriend","useTheme","Card","CardContent","TextField","fullWidth","onChange","e","updateFriend","name","target","value","id","label","type","defaultValue","pseudo","imageUrl","CardMedia","image","actions","CardActions","startIcon","component","rank","renderFriendByMode","Friends","friends","sortedFriends","sort","a","b","points","Fragment","gutterBottom","Fab","map","renderFriendsByMode","Party","party","gameForParty","games","find","elt","gameId","console","log","src","startDate","toLocaleDateString","Partys","partys","sortedPartys","Date","Home","Game","game","UpdateGames","updatedGame","SetUpdatedGame","updateGame","description","rulesUrl","InputLabelProps","shrink","FormControlLabel","control","Switch","checked","timedRound","roundTime","minParticipation","maxParticipation","Games","dataPlaces","dataFriends","bestScore","currentTitle","dataPartys","partyId","participations","playerId","rounds","roundId","scores","participationId","score","endDate","placeId","dataGames","minRound","maxRound","App","route","setRoute","setFriends","setGames","setMode","action","newGamesArray","undefined","newId","length","Math","max","apply","o","newGame","push","gameArrayElt","findIndex","splice","newFriendsArray","friendArrayElt","newFriend","newRoute","renderRoute","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a037d2b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Navigation({ onRouteChanged }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton onClick={() => {\r\n                    onRouteChanged(\"home\")\r\n                }} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Home\r\n                </Typography>\r\n                <Button onClick={() => {\r\n                    onRouteChanged(\"games\")\r\n                }} color=\"inherit\">Games</Button>\r\n                <Button onClick={() => {\r\n                    onRouteChanged(\"friends\")\r\n                }} color=\"inherit\">Friends</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n        // <div className=\"Navigation\">\r\n        //     <div onClick={() => {\r\n        //         onRouteChanged(\"home\")\r\n        //     }} className=\"Logo\">\r\n        //         <a href=\"#\">Home</a>\r\n        //     </div>\r\n        //     <div className=\"Menu\">\r\n        //         <a onClick={() => {\r\n        //             onRouteChanged(\"games\")\r\n        //         }} href=\"#\">Games</a>\r\n        //         <a onClick={() => {\r\n        //             onRouteChanged(\"friends\")\r\n        //         }} href=\"#\">Friends</a>\r\n        //     </div>\r\n        // </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport './Friend.css';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n\r\n    },\r\n    rootFriendsEdit: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    friendsEdit: {\r\n        display: 'flex',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    friendsEditDetails: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    friendsEditDetailsContent: {\r\n        flex: '0 0 auto',\r\n        width: 300,\r\n        gap: 10\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n        width: 100,\r\n        gap: 10\r\n    },\r\n    cover: {\r\n        width: 151,\r\n    }\r\n}));\r\n\r\nfunction Friend({ friend, index, mode, UpdateFriends }) {\r\n\r\n    const [updatedFriend, SetUpdatedFriend] = useState(friend);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    const renderFriendByMode = () => {\r\n        switch (mode) {\r\n            case \"edit\":\r\n                return (\r\n                    // <React.Fragment>\r\n                    //     <section className=\"Friend\">\r\n                    //         <div>\r\n                    //             <label>\r\n                    //                 Name\r\n                    //         </label>\r\n                    //             <input onChange={(e) => {\r\n                    //                 let updateFriend = { ...updatedFriend };\r\n                    //                 updateFriend.name = e.target.value;\r\n                    //                 SetUpdatedFriend(updateFriend);\r\n                    //             }} type=\"text\" defaultValue={updatedFriend.name} />\r\n\r\n                    //         </div>\r\n                    //         <div>\r\n                    //             <label>\r\n                    //                 Total score: {updatedFriend.points}\r\n                    //             </label>\r\n                    //         </div>\r\n                    //         <div>\r\n                    //             <label>\r\n                    //                 Image Url\r\n                    //         </label>\r\n                    //             <input onChange={(e) => {\r\n                    //                 let updateFriend = { ...updatedFriend };\r\n                    //                 updateFriend.imageUrl = e.target.value;\r\n                    //                 SetUpdatedFriend(updateFriend);\r\n                    //             }} type=\"text\" defaultValue={updatedFriend.imageUrl} />\r\n                    //             <img src={updatedFriend.imageUrl} alt='#' />\r\n                    //         </div>\r\n                    //         <div className=\"UpdatePlayerButton\">\r\n                    //             <button onClick={() => {\r\n                    //                 UpdateFriends(updatedFriend)\r\n                    //             }}>Update player</button>\r\n                    //         </div>\r\n\r\n                    //     </section>\r\n                    // </React.Fragment>\r\n\r\n\r\n                    <Card className={classes.rootFriendsEdit} key={updatedFriend.id}>\r\n                        <div className={classes.friendsEdit}>\r\n                            <div className={classes.friendsEditDetails}>\r\n                                <CardContent className={classes.friendsEditDetailsContent}>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        onChange={(e) => {\r\n                                            let updateFriend = { ...updatedFriend };\r\n                                            updateFriend.name = e.target.value;\r\n                                            SetUpdatedFriend(updateFriend);\r\n                                        }} id={\"player-Name\" + updatedFriend.id} label=\"Name\" type=\"text\" variant=\"outlined\" defaultValue={updatedFriend.name} />\r\n\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        onChange={(e) => {\r\n                                            let updateFriend = { ...updatedFriend };\r\n                                            updateFriend.pseudo = e.target.value;\r\n                                            SetUpdatedFriend(updateFriend);\r\n                                        }} id={\"player-pseudo\" + updatedFriend.id} label=\"Name\" type=\"text\" variant=\"outlined\" defaultValue={updatedFriend.pseudo} />\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        onChange={(e) => {\r\n                                            let updateFriend = { ...updatedFriend };\r\n                                            updateFriend.imageUrl = e.target.value;\r\n                                            SetUpdatedFriend(updateFriend);\r\n                                        }} id={\"player-imageUrl\" + updatedFriend.id} label=\"Image url\" type=\"text\" variant=\"outlined\" defaultValue={updatedFriend.imageUrl} />\r\n\r\n                                </CardContent>\r\n\r\n                            </div>\r\n                            <CardMedia\r\n                                id={\"player-img\" + updatedFriend.id}\r\n                                className={classes.cover}\r\n                                image={updatedFriend.imageUrl}\r\n                                title=\"Live from space album cover\"\r\n                            />\r\n                        </div>\r\n                        <div className={classes.actions}>\r\n                            <CardActions>\r\n                                <Button\r\n                                    id={\"player-update-button-\" + updatedFriend.id}\r\n                                    onClick={() => {\r\n\r\n                                        UpdateFriends(updatedFriend, \"update\");\r\n                                    }} fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<SaveIcon />}\r\n                                >\r\n                                    Save\r\n                            </Button>\r\n                                <Button\r\n                                    id={\"player-delete-button-\" + updatedFriend.id}\r\n                                    onClick={() => {\r\n\r\n                                        UpdateFriends(updatedFriend, \"delete\");\r\n                                    }} fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    startIcon={<SaveIcon />}\r\n                                >\r\n                                    Delete\r\n                            </Button>\r\n                            </CardActions></div>\r\n\r\n                    </Card>\r\n                )\r\n\r\n            default:\r\n                return (\r\n                    <Card className={classes.root}>\r\n                        <div className={classes.details}>\r\n                            <CardContent className={classes.content}>\r\n                                <Typography component=\"h4\" variant=\"h4\">\r\n                                    {updatedFriend.rank}\r\n                                </Typography>\r\n                                <Typography component=\"h5\" variant=\"h5\">\r\n                                    {updatedFriend.name}\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                                    {updatedFriend.pseudo}\r\n                                </Typography>\r\n                            </CardContent>\r\n\r\n                        </div>\r\n                        <CardMedia\r\n                            className={classes.cover}\r\n                            image={updatedFriend.imageUrl}\r\n                            title=\"Live from space album cover\"\r\n                        />\r\n                    </Card>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderFriendByMode()\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport './Friends.css';\r\nimport Friend from './Friend';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction Friends({ friends, mode, UpdateFriends }) {\r\n\r\n    const sortedFriends = friends.sort((a, b) => {\r\n        return (b.points - a.points)\r\n    });\r\n\r\n    const renderFriendsByMode = () => {\r\n        switch (mode) {\r\n            case \"edit\":\r\n                return (\r\n                    <React.Fragment>\r\n                        <Typography className=\"GamesHeader\" variant=\"h3\" component=\"h3\" gutterBottom>\r\n                            Manage your friends\r\n        </Typography>\r\n                        <div className=\"FriendsEditRoot\">\r\n                            <div className=\"FriendsAction\">\r\n                                <Fab onClick={() => {\r\n                                    UpdateFriends({}, \"add\");\r\n                                }} color=\"primary\" aria-label=\"add\">\r\n                                    <AddIcon />\r\n                                </Fab>\r\n                            </div>\r\n                            <div className=\"FriendsEdit\">\r\n\r\n                                {\r\n                                    sortedFriends.map((friend, index) => {\r\n                                        return (\r\n                                            <Friend friend={friend} index={index + 1} mode={mode} UpdateFriends={UpdateFriends} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n                )\r\n            default:\r\n                return (\r\n                    <div className=\"Friends\">\r\n                        <h2 className=\"FriendsRankHeader\">Ranking</h2>\r\n                        {\r\n                            sortedFriends.map((friend, index) => {\r\n                                return (\r\n                                    <Friend friend={friend} index={index + 1} mode={mode} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderFriendsByMode()\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport './Party.css';\r\n\r\nconst Party = ({ party, games }) => {\r\n    // const playerSortByPointsInTheGame = party.players.sort((a, b) => {\r\n    //     return (b.points - a.points)\r\n    // });\r\n\r\n\r\n    const gameForParty = games.find(elt => {\r\n        return elt.id === party.gameId\r\n    });\r\n    console.log('Party', party);\r\n    console.log('Game', gameForParty)\r\n    return (\r\n        <div className=\"Party\">\r\n            {/* <h2>Winner : {playerSortByPointsInTheGame[0].name}</h2> */}\r\n            <img src={gameForParty.imageUrl} />\r\n            {party.startDate.toLocaleDateString()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Party;","import React from 'react';\r\nimport Party from './Party';\r\nimport './Partys.css';\r\n\r\nconst Partys = ({ partys, games }) => {\r\n    /* Filter partys by date descending */\r\n    const sortedPartys = partys.sort((a, b) => {\r\n        return (new Date(b.startDate) - new Date(a.startDate))\r\n    })\r\n\r\n    return (\r\n        <div className=\"Partys\">\r\n            {\r\n                sortedPartys.map(party => {\r\n                    return (\r\n                        <Party party={party} games={games} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Partys;","import React from 'react';\r\nimport './Home.css';\r\nimport Friends from '../components/Friends';\r\nimport Partys from '../components/Partys';\r\n\r\nfunction Home({ friends, games, partys }) {\r\n    return (\r\n        <div className=\"Home\">\r\n            <h1>Last partys</h1>\r\n            <div className=\"HomeContent\">\r\n                <Partys partys={partys} games={games} />\r\n                <div className=\"HomeFriends\">\r\n                    <Friends friends={friends} mode=\"list\" />\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport './Game.css';\r\nimport { Button } from '@material-ui/core';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Game({ game, UpdateGames }) {\r\n    const [updatedGame, SetUpdatedGame] = useState(game);\r\n\r\n    return (\r\n\r\n        <section className=\"Game\">\r\n            <div className=\"GameCardHeader\">\r\n\r\n                <img className=\"ImageGame\" src={updatedGame.imageUrl} />\r\n\r\n                <div className=\"GameDescription\">\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                            let updateGame = { ...updatedGame };\r\n                            updateGame.name = e.target.value;\r\n                            SetUpdatedGame(updateGame);\r\n                        }} id=\"game-Name\" label=\"Name\" type=\"text\" variant=\"outlined\" defaultValue={updatedGame.name} />\r\n\r\n\r\n                    <TextField\r\n                        fullWidth onChange={(e) => {\r\n                            let updateGame = { ...updatedGame };\r\n                            updateGame.description = e.target.value;\r\n                            SetUpdatedGame(updateGame);\r\n                        }} id=\"game-description\" label=\"Description\" type=\"text\" variant=\"outlined\" defaultValue={updatedGame.description} />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                            let updateGame = { ...updatedGame };\r\n                            updateGame.rulesUrl = e.target.value;\r\n                            SetUpdatedGame(updateGame);\r\n                        }} id=\"game-rulesUrl\" label=\"Link to rules\" type=\"text\" variant=\"outlined\" defaultValue={updatedGame.rulesUrl} />\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <TextField\r\n                fullWidth\r\n                onChange={(e) => {\r\n                    let updateGame = { ...updatedGame };\r\n                    updateGame.imageUrl = e.target.value;\r\n                    SetUpdatedGame(updateGame);\r\n                }}\r\n                id=\"game-imageUrl\"\r\n                label=\"Image Url\"\r\n                type=\"text\"\r\n                defaultValue={updatedGame.imageUrl}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <div className=\"GameCardBody\">\r\n\r\n                <div className=\"GameTime\">\r\n                    <FormControlLabel\r\n                        fullWidth\r\n                        control={<Switch checked={updatedGame.timedRound} onChange={(e) => {\r\n                            let updateGame = { ...updatedGame };\r\n                            updateGame.timedRound = e.target.checked;\r\n                            SetUpdatedGame(updateGame);\r\n                        }} name=\"checkedA\" />}\r\n                        label=\"Time round\"\r\n                    />\r\n\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"game-round-time\"\r\n                        onChange={(e) => {\r\n                            let updateGame = { ...updatedGame };\r\n                            updateGame.roundTime = +e.target.value;\r\n                            SetUpdatedGame(updateGame);\r\n                        }}\r\n                        defaultValue={updatedGame.roundTime}\r\n                        label=\"Round time\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </div>\r\n                <div className=\"GameCardParticipation\">\r\n                    <TextField\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                            let updateGame = { ...updatedGame };\r\n                            updateGame.minParticipation = +e.target.value;\r\n                            SetUpdatedGame(updateGame);\r\n                        }}\r\n                        id=\"game-minParticipation\"\r\n                        label=\"Minimum Participation\"\r\n                        type=\"number\"\r\n                        defaultValue={updatedGame.minParticipation}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        defaultValue={updatedGame.maxParticipation}\r\n                        onChange={(e) => {\r\n                            let updateGame = { ...updatedGame };\r\n                            updateGame.maxParticipation = +e.target.value;\r\n                            SetUpdatedGame(updateGame);\r\n                        }}\r\n                        id=\"game-maxParticipation\"\r\n                        label=\"Maximum participation \"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"GameAction\">\r\n                <Button\r\n                    onClick={() => {\r\n\r\n                        UpdateGames(updatedGame, \"update\");\r\n                    }} fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon />}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button\r\n                    onClick={() => {\r\n\r\n                        UpdateGames(updatedGame, \"delete\")\r\n                    }} fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                >\r\n                    Delete\r\n                </Button>\r\n\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport './Games.css';\r\nimport Game from './Game';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n\r\n    },\r\n});\r\n\r\n\r\nconst Games = ({ games, UpdateGames }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Typography className=\"GamesHeader\" variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Manage your games\r\n        </Typography>\r\n            <div className=\"Action\">\r\n                <Fab onClick={() => {\r\n                    UpdateGames({}, \"add\");\r\n                }} color=\"primary\" aria-label=\"add\">\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n            <div className=\"Games\">\r\n\r\n                {\r\n                    games.map(game => {\r\n                        return (<Game game={game} UpdateGames={UpdateGames} />)\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Games;","const dataTitles = [\r\n    {\r\n        id: 1,\r\n        titleType: 1\r\n    }\r\n]\r\n\r\nconst dataTitleType = [\r\n    {\r\n\r\n    }\r\n]\r\n\r\nexport const dataPlaces = [\r\n    {\r\n        id: 1,\r\n        name: `Rotor's home`\r\n    }\r\n]\r\n\r\n\r\nexport const dataFriends = [\r\n    {\r\n        id: 1,\r\n        name: 'Jean',\r\n        pseudo: 'Jeannot',\r\n        imageUrl: 'https://cdn.pixabay.com/photo/2021/01/21/16/17/english-cocker-spaniel-5937757_960_720.jpg',\r\n        bestScore: '',\r\n        currentTitle: ''\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Julie',\r\n        pseudo: 'Julyyy',\r\n        imageUrl: 'https://media.istockphoto.com/photos/conference-call-picture-id1249750732?s=612x612'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Romain',\r\n        pseudo: 'Rotor',\r\n        imageUrl: 'https://media.istockphoto.com/photos/crazy-guys-at-pub-drinking-beer-and-taking-selfie-picture-id871440942?s=612x612'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Adeline',\r\n        pseudo: 'Boulla',\r\n        imageUrl: 'https://media.istockphoto.com/photos/smiling-european-woman-holding-video-call-at-home-picture-id1279977965?s=612x612'\r\n    }\r\n];\r\n/* Fake partys */\r\nexport const dataPartys = [\r\n    {\r\n        partyId: 1,\r\n        participations: [\r\n            {\r\n                playerId: 1,\r\n                partyId: 1\r\n            },\r\n            {\r\n                playerId: 2,\r\n                partyId: 1\r\n            }\r\n        ],\r\n        rounds: [\r\n            {\r\n                roundId: 1,\r\n                scores: [\r\n                    {\r\n                        participationId: 1,\r\n                        roundId: 1,\r\n                        score: 1\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        gameId: 1,\r\n        startDate: new Date('December 17, 1995 03:24:00'),\r\n        endDate: new Date('December 17, 1995 03:24:00'),\r\n        placeId: 1\r\n    }\r\n]\r\n/* Fake games // List of games available to play */\r\nexport const dataGames = [\r\n    {\r\n        id: 1,\r\n        name: 'Blind test',\r\n        description: 'Jeu de blind test classique',\r\n        rulesUrl: '',\r\n        imageUrl: 'https://cibul.s3.amazonaws.com/c4efc99789a44ee1bd3243d04fd3307b.base.image.jpg',\r\n        timedRound: false,\r\n        roundTime: 0,\r\n        minParticipation: 2,\r\n        maxParticipation: 0\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Poker',\r\n        imageUrl: 'https://img.huffingtonpost.com/asset/5c933ee32a0000ba024e69bc.jpeg?ops=scalefit_720_noupscale&format=webp',\r\n        timedRound: true,\r\n        roundTime: 0,\r\n        minParticipation: 2,\r\n        maxParticipation: 0,\r\n        minRound: 1,\r\n        maxRound: 0\r\n    }\r\n]\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation';\nimport Home from './Home';\nimport Friends from '../components/Friends';\nimport Games from '../components/Games';\nimport { dataGames, dataPartys, dataFriends, dataPlaces } from '../Data/Data.js'\n\n/*Initializing fake data // Not connected to a backend for now each time the app end data lost */\n\n\nfunction App() {\n\n  const [route, setRoute] = useState(\"home\");\n  const [friends, setFriends] = useState(dataFriends);\n  const [games, setGames] = useState(dataGames);\n  const [partys, setPartys] = useState(dataPartys);\n  const [mode, setMode] = useState(\"list\");\n  const [places, setDataPlaces] = useState(dataPlaces);\n\n  const UpdateGames = (game, action) => {\n    console.log(\"Action\", action, game, games);\n    let newGamesArray = undefined;\n    switch (action) {\n      case \"add\":\n        let newId = 1;\n        if (games.length > 0) {\n          newId = Math.max.apply(Math, games.map(function (o) { return o.id; })) + 1;\n        }\n\n        let newGame = {\n          id: newId,\n          timedRound: false\n        }\n        newGamesArray = [...games];\n        newGamesArray.push(newGame);\n        setGames([...newGamesArray]);\n        break;\n      case \"update\":\n        newGamesArray = games.map(gameArrayElt => {\n          if (gameArrayElt.id === game.id) {\n            return game;\n          }\n          return gameArrayElt\n        })\n        console.log(\"update array\", newGamesArray)\n        setGames([...newGamesArray]);\n        break;\n      case \"delete\":\n\n        newGamesArray = [...games];\n        var index = games.findIndex(function (o) {\n          return o.id === game.id;\n        })\n        if (index !== -1) {\n          newGamesArray.splice(index, 1);\n          setGames([...newGamesArray]);\n        }\n        break;\n      default:\n        break;\n    }\n\n\n  }\n\n  const UpdateFriends = (friend, action) => {\n    console.log(\"Action\", action);\n\n    let newFriendsArray = undefined;\n    switch (action) {\n      case \"update\":\n        newFriendsArray = friends.map(friendArrayElt => {\n          if (friendArrayElt.id === friend.id) {\n            return friend;\n          }\n          return friendArrayElt\n        })\n        setFriends([...newFriendsArray]);\n        break;\n      case \"delete\":\n        console.log(\"Ami à supprimer\", friend);\n        newFriendsArray = [...friends];\n        var index = friends.findIndex(function (o) {\n          return o.id === friend.id;\n\n        })\n        if (index !== -1) {\n          console.log(\"Delete\", index);\n          newFriendsArray.splice(index, 1);\n          console.log(\"tableau après splice\", newFriendsArray)\n          setFriends(newFriendsArray);\n          console.log(\"Tableau final\", [...newFriendsArray]);\n        }\n        break;\n      case \"add\":\n        let newId = 1;\n        if (friends.length > 0) {\n          newId = Math.max.apply(Math, friends.map(function (o) { return o.id; })) + 1;\n        }\n        let newFriend = {\n          id: newId\n\n        }\n        newFriendsArray = [...friends];\n        newFriendsArray.push(newFriend);\n        setFriends([...newFriendsArray]);\n        console.log(\"friends\", newFriendsArray)\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  const renderRoute = () => {\n    switch (route) {\n      case \"home\":\n        return (\n          <React.Fragment>\n            <Home friends={friends} games={games} partys={partys} />\n          </React.Fragment>\n        )\n      case \"friends\":\n        return (\n          <React.Fragment>\n            <Friends friends={friends} mode={mode} UpdateFriends={UpdateFriends} />\n          </React.Fragment>\n        )\n      case \"games\":\n        return (\n          <React.Fragment>\n            <Games games={games} UpdateGames={UpdateGames} />\n          </React.Fragment>\n        )\n      default:\n        break;\n    }\n  }\n  const onRouteChanged = (newRoute) => {\n    setRoute(newRoute);\n    switch (newRoute) {\n      case \"home\":\n        setMode(\"list\");\n        break;\n\n      default:\n        setMode(\"edit\");\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Navigation onRouteChanged={onRouteChanged} />\n      {\n        renderRoute()\n      }\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'fontsource-roboto';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}