{"version":3,"sources":["components/Navigation.js","components/Friend.js","components/Friends.js","components/Party.js","components/Partys.js","containers/Home.js","components/Game.js","components/Games.js","containers/App.js","index.js"],"names":["Navigation","onRouteChanged","className","onClick","href","Friend","friend","index","mode","Fragment","type","defaultValue","name","imageUrl","src","alt","points","renderFriendByMode","Friends","friends","sortedFriends","sort","a","b","map","renderFriendsByMode","Party","party","playerSortByPointsInTheGame","players","game","date","toLocaleDateString","Partys","sortedPartys","partys","Date","Home","games","Game","Games","dataFriends","pseudo","dataPartys","dataGames","id","App","useState","route","setRoute","setMode","newRoute","renderRoute","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4XAyBeA,EAtBI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAClB,OACI,sBAAKC,UAAU,aAAf,UACI,qBAAKC,QAAS,WACVF,EAAe,SAChBC,UAAU,OAFb,SAGI,mBAAGE,KAAK,IAAR,oBAEJ,sBAAKF,UAAU,OAAf,UACI,mBAAGC,QAAS,WACRF,EAAe,UAChBG,KAAK,IAFR,mBAGA,mBAAGD,QAAS,WACRF,EAAe,YAChBG,KAAK,IAFR,4BC2CDC,G,kBAvDA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAkD7B,OAhD2B,WACvB,OAAQA,GACJ,IAAK,OACD,OACI,cAAC,IAAMC,SAAP,UACI,0BAASP,UAAU,SAAnB,UACI,gCACI,yCAGA,uBAAOQ,KAAK,OAAOC,aAAcL,EAAOM,UAG5C,gCACI,2CAGA,uBAAOF,KAAK,OAAOC,aAAcL,EAAOM,UAE5C,gCACI,8CAGA,uBAAOF,KAAK,OAAOC,aAAcL,EAAOO,WACxC,qBAAKC,IAAKR,EAAOO,SAAUE,IAAI,SAEnC,qBAAKb,UAAU,qBAAf,SACI,0DAOpB,QACI,OACI,cAAC,IAAMO,SAAP,UACI,0BAASP,UAAU,SAAnB,UACI,yCAAYK,KACZ,+BAAKD,EAAOM,KAAZ,MAAqBN,EAAOU,OAA5B,QACA,qBAAKF,IAAKR,EAAOO,SAAUE,IAAI,YASnDE,KCLOC,EA7CC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASX,EAAW,EAAXA,KAElBY,EAAgBD,EAAQE,MAAK,SAACC,EAAGC,GACnC,OAAQA,EAAEP,OAASM,EAAEN,UAqCzB,OAlC4B,WACxB,OAAQR,GACJ,IAAK,OACD,OACI,eAAC,IAAMC,SAAP,WACI,oBAAIP,UAAU,sBAAd,iCACA,qBAAKA,UAAU,cAAf,SAGQkB,EAAcI,KAAI,SAAClB,EAAQC,GACvB,OACI,cAAC,EAAD,CAAQD,OAAQA,EAAQC,MAAOA,EAAQ,EAAGC,KAAMA,YAO5E,QACI,OACI,qBAAKN,UAAU,UAAf,SAEQkB,EAAcI,KAAI,SAAClB,EAAQC,GACvB,OACI,cAAC,EAAD,CAAQD,OAAQA,EAAQC,MAAOA,EAAQ,EAAGC,KAAMA,UAW5EiB,IC5BOC,G,MAdD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACPC,EAA8BD,EAAME,QAAQR,MAAK,SAACC,EAAGC,GACvD,OAAQA,EAAEP,OAASM,EAAEN,UAEzB,OACI,sBAAKd,UAAU,QAAf,UACI,2CAAc0B,EAA4B,GAAGhB,QAC7C,qBAAKE,IAAKa,EAAMG,KAAKjB,WACpBc,EAAMI,KAAKC,0BCYTC,G,MAnBA,SAAC,GAAgB,IAEtBC,EAFqB,EAAbC,OAEcd,MAAK,SAACC,EAAGC,GACjC,OAAQ,IAAIa,KAAKb,EAAEQ,MAAQ,IAAIK,KAAKd,EAAES,SAG1C,OACI,qBAAK7B,UAAU,SAAf,SAEQgC,EAAaV,KAAI,SAAAG,GACb,OACI,cAAC,EAAD,CAAOA,MAAOA,WCGvBU,MAbf,YAA2C,IAA3BlB,EAA0B,EAA1BA,QAAgBgB,GAAU,EAAjBG,MAAiB,EAAVH,QAC5B,OACI,sBAAKjC,UAAU,OAAf,UACI,8CACA,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,CAAQiC,OAAQA,IAChB,cAAC,EAAD,CAAShB,QAASA,EAASX,KAAK,gBCcjC+B,G,YAtBF,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACZ,OACI,0BAAS5B,UAAU,OAAnB,UACI,gCACI,yCACA,uBAAOQ,KAAK,OAAOC,aAAcmB,EAAKlB,UAE1C,gCACI,8CACA,uBAAOF,KAAK,OAAOC,aAAcmB,EAAKjB,cAG1C,8BACI,qBAAKX,UAAU,YAAYY,IAAKgB,EAAKjB,aAEzC,8BACI,wBAAQX,UAAU,mBAAlB,gCCEDsC,EAjBD,SAAC,GAAe,IAAbF,EAAY,EAAZA,MACb,OACI,eAAC,IAAM7B,SAAP,WAEI,oBAAIP,UAAU,cAAd,+BACA,qBAAKA,UAAU,QAAf,SAEQoC,EAAMd,KAAI,SAAAM,GACN,OAAQ,cAAC,EAAD,CAAMA,KAAMA,aCJtCW,EAAc,CAClB,CACE7B,KAAM,OACN8B,OAAQ,UACR1B,OAAQ,GACRH,SAAU,6FAEZ,CACED,KAAM,QACN8B,OAAQ,SACR1B,OAAQ,GACRH,SAAU,uFAEZ,CACED,KAAM,SACN8B,OAAQ,QACR1B,OAAQ,GACRH,SAAU,wHAEZ,CACED,KAAM,UACN8B,OAAQ,SACR1B,OAAQ,IACRH,SAAU,0HAIR8B,EAAa,CACjB,CACEd,QAAS,CACP,CACEjB,KAAM,OACNI,OAAQ,IAEV,CACEJ,KAAM,QACNI,OAAQ,KAGZc,KAAM,CACJlB,KAAM,WACNC,SAAU,wFAGZkB,KAAM,IAAIK,KAAK,+BAEjB,CACEP,QAAS,CACP,CACEjB,KAAM,OACNI,OAAQ,IAEV,CACEJ,KAAM,QACNI,OAAQ,KAGZc,KAAM,CACJlB,KAAM,QACNC,SAAU,6GAGZkB,KAAM,IAAIK,KAAK,+BAEjB,CACEP,QAAS,CACP,CACEjB,KAAM,QACNI,OAAQ,IAEV,CACEJ,KAAM,SACNI,OAAQ,MAGZc,KAAM,CACJlB,KAAM,aACNC,SAAU,kFAGZkB,KAAM,IAAIK,KAAK,gCAIbQ,EAAY,CAChB,CACEC,GAAI,EACJjC,KAAM,aACNC,SAAU,kFAEZ,CACEgC,GAAI,EACJjC,KAAM,QACNC,SAAU,8GA+DCiC,MA3Df,WAAgB,IAAD,EAEaC,mBAAS,QAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAASN,GAH1B,mBAGNtB,EAHM,aAIa4B,mBAASH,IAJtB,mBAINN,EAJM,aAKeS,mBAASJ,IALxB,mBAKNR,EALM,aAMWY,mBAAS,SANpB,mBAMNvC,EANM,KAMA0C,EANA,KA8Cb,OACE,sBAAKhD,UAAU,MAAf,UACE,cAAC,EAAD,CAAYD,eAfO,SAACkD,GAEtB,OADAF,EAASE,GACDA,GACN,IAAK,OACHD,EAAQ,QACR,MAEF,QACEA,EAAQ,YAjCM,WAClB,OAAQF,GACN,IAAK,OAEH,OACE,cAAC,IAAMvC,SAAP,UACE,cAAC,EAAD,CAAMU,QAASA,EAASmB,MAAOA,EAAOH,OAAQA,MAGpD,IAAK,UACH,OACE,cAAC,IAAM1B,SAAP,UACE,cAAC,EAAD,CAASU,QAASA,EAASX,KAAMA,MAGvC,IAAK,QACH,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,CAAO6B,MAAOA,OAwBlBc,OCrJRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.30c63ca1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onRouteChanged }) => {\r\n    return (\r\n        <div className=\"Navigation\">\r\n            <div onClick={() => {\r\n                onRouteChanged(\"home\")\r\n            }} className=\"Logo\">\r\n                <a href=\"#\">Home</a>\r\n            </div>\r\n            <div className=\"Menu\">\r\n                <a onClick={() => {\r\n                    onRouteChanged(\"games\")\r\n                }} href=\"#\">Games</a>\r\n                <a onClick={() => {\r\n                    onRouteChanged(\"friends\")\r\n                }} href=\"#\">Friends</a>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './Friend.css';\r\n\r\nconst Friend = ({ friend, index, mode }) => {\r\n\r\n    const renderFriendByMode = () => {\r\n        switch (mode) {\r\n            case \"edit\":\r\n                return (\r\n                    <React.Fragment>\r\n                        <section className=\"Friend\">\r\n                            <div>\r\n                                <label>\r\n                                    Name\r\n                            </label>\r\n                                <input type=\"text\" defaultValue={friend.name} />\r\n\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    Points\r\n                            </label>\r\n                                <input type=\"text\" defaultValue={friend.name} />\r\n                            </div>\r\n                            <div>\r\n                                <label>\r\n                                    Image Url\r\n                            </label>\r\n                                <input type=\"text\" defaultValue={friend.imageUrl} />\r\n                                <img src={friend.imageUrl} alt='#' />\r\n                            </div>\r\n                            <div className=\"UpdatePlayerButton\">\r\n                                <button>Update player</button>\r\n                            </div>\r\n\r\n                        </section>\r\n                    </React.Fragment>\r\n                )\r\n\r\n            default:\r\n                return (\r\n                    <React.Fragment>\r\n                        <section className=\"Friend\">\r\n                            <h2>Rank : {index}</h2>\r\n                            <h3>{friend.name} : {friend.points}  </h3>\r\n                            <img src={friend.imageUrl} alt='#' />\r\n                        </section>\r\n                    </React.Fragment>\r\n                )\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderFriendByMode()\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport './Friends.css';\r\nimport Friend from './Friend';\r\n\r\nconst Friends = ({ friends, mode }) => {\r\n\r\n    const sortedFriends = friends.sort((a, b) => {\r\n        return (b.points - a.points)\r\n    });\r\n\r\n    const renderFriendsByMode = () => {\r\n        switch (mode) {\r\n            case \"edit\":\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"FriendsManageHeader\">Manage your friends</h1>\r\n                        <div className=\"FriendsEdit\">\r\n\r\n                            {\r\n                                sortedFriends.map((friend, index) => {\r\n                                    return (\r\n                                        <Friend friend={friend} index={index + 1} mode={mode} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            default:\r\n                return (\r\n                    <div className=\"Friends\">\r\n                        {\r\n                            sortedFriends.map((friend, index) => {\r\n                                return (\r\n                                    <Friend friend={friend} index={index + 1} mode={mode} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        renderFriendsByMode()\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport './Party.css';\r\n\r\nconst Party = ({ party }) => {\r\n    const playerSortByPointsInTheGame = party.players.sort((a, b) => {\r\n        return (b.points - a.points)\r\n    })\r\n    return (\r\n        <div className=\"Party\">\r\n            <h2>Winner : {playerSortByPointsInTheGame[0].name}</h2>\r\n            <img src={party.game.imageUrl} />\r\n            {party.date.toLocaleDateString()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Party;","import React from 'react';\r\nimport Party from './Party';\r\nimport './Partys.css';\r\n\r\nconst Partys = ({ partys }) => {\r\n    /* Filter partys by date descending */\r\n    const sortedPartys = partys.sort((a, b) => {\r\n        return (new Date(b.date) - new Date(a.date))\r\n    })\r\n\r\n    return (\r\n        <div className=\"Partys\">\r\n            {\r\n                sortedPartys.map(party => {\r\n                    return (\r\n                        <Party party={party} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Partys;","import React from 'react';\r\nimport './Home.css';\r\nimport Friends from '../components/Friends';\r\nimport Partys from '../components/Partys';\r\n\r\nfunction Home({ friends, games, partys }) {\r\n    return (\r\n        <div className=\"Home\">\r\n            <h1>Welcome home</h1>\r\n            <div className=\"HomeContent\">\r\n                <Partys partys={partys} />\r\n                <Friends friends={friends} mode=\"list\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Game.css';\r\n\r\nconst Game = ({ game }) => {\r\n    return (\r\n        <section className=\"Game\">\r\n            <div>\r\n                <label>Name</label>\r\n                <input type=\"text\" defaultValue={game.name} />\r\n            </div>\r\n            <div>\r\n                <label>Image Url</label>\r\n                <input type=\"text\" defaultValue={game.imageUrl} />\r\n\r\n            </div>\r\n            <div>\r\n                <img className=\"ImageGame\" src={game.imageUrl} />\r\n            </div>\r\n            <div>\r\n                <button className=\"UpdateGameButton\">Update game</button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport './Games.css';\r\nimport Game from './Game';\r\n\r\nconst Games = ({ games }) => {\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <h1 className=\"GamesHeader\">Manage your games</h1>\r\n            <div className=\"Games\">\r\n                {\r\n                    games.map(game => {\r\n                        return (<Game game={game} />)\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Games;","import React, { useState } from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation';\nimport Home from './Home';\nimport Friends from '../components/Friends';\nimport Games from '../components/Games';\n\n/*Initializing fake data // Not connected to a backend for now each time the app end data lost */\nconst dataFriends = [\n  {\n    name: 'Jean',\n    pseudo: 'Jeannot',\n    points: 10,\n    imageUrl: 'https://cdn.pixabay.com/photo/2021/01/21/16/17/english-cocker-spaniel-5937757_960_720.jpg'\n  },\n  {\n    name: 'Julie',\n    pseudo: 'Julyyy',\n    points: 50,\n    imageUrl: 'https://media.istockphoto.com/photos/conference-call-picture-id1249750732?s=612x612'\n  },\n  {\n    name: 'Romain',\n    pseudo: 'Rotor',\n    points: 50,\n    imageUrl: 'https://media.istockphoto.com/photos/crazy-guys-at-pub-drinking-beer-and-taking-selfie-picture-id871440942?s=612x612'\n  },\n  {\n    name: 'Adeline',\n    pseudo: 'Boulla',\n    points: 150,\n    imageUrl: 'https://media.istockphoto.com/photos/smiling-european-woman-holding-video-call-at-home-picture-id1279977965?s=612x612'\n  }\n];\n/* Fake partys */\nconst dataPartys = [\n  {\n    players: [\n      {\n        name: 'Jean',\n        points: 10\n      },\n      {\n        name: 'Julie',\n        points: 50\n      }\n    ],\n    game: {\n      name: 'Scrabble',\n      imageUrl: 'https://www.montres-de-luxe.com/photo/art/default/44254703-36237167.jpg?v=1585622136'\n\n    },\n    date: new Date('December 17, 1995 03:24:00')\n  },\n  {\n    players: [\n      {\n        name: 'Jean',\n        points: 10\n      },\n      {\n        name: 'Julie',\n        points: 50\n      }\n    ],\n    game: {\n      name: 'Poker',\n      imageUrl: 'https://img.huffingtonpost.com/asset/5c933ee32a0000ba024e69bc.jpeg?ops=scalefit_720_noupscale&format=webp'\n\n    },\n    date: new Date('December 20, 2020 03:24:00')\n  },\n  {\n    players: [\n      {\n        name: 'Rotor',\n        points: 40\n      },\n      {\n        name: 'Boulla',\n        points: 150\n      }\n    ],\n    game: {\n      name: 'Blind test',\n      imageUrl: 'https://cibul.s3.amazonaws.com/c4efc99789a44ee1bd3243d04fd3307b.base.image.jpg'\n\n    },\n    date: new Date('December 25, 2020 03:24:00')\n  }\n]\n/* Fake games // List of games available to play */\nconst dataGames = [\n  {\n    id: 1,\n    name: 'Blind test',\n    imageUrl: 'https://cibul.s3.amazonaws.com/c4efc99789a44ee1bd3243d04fd3307b.base.image.jpg'\n  },\n  {\n    id: 2,\n    name: 'Poker',\n    imageUrl: 'https://img.huffingtonpost.com/asset/5c933ee32a0000ba024e69bc.jpeg?ops=scalefit_720_noupscale&format=webp'\n  }\n]\n\nfunction App() {\n\n  const [route, setRoute] = useState(\"home\");\n  const [friends, setFriends] = useState(dataFriends);\n  const [games, setGames] = useState(dataGames);\n  const [partys, setPartys] = useState(dataPartys);\n  const [mode, setMode] = useState(\"list\");\n\n  const renderRoute = () => {\n    switch (route) {\n      case \"home\":\n\n        return (\n          <React.Fragment>\n            <Home friends={friends} games={games} partys={partys} />\n          </React.Fragment>\n        )\n      case \"friends\":\n        return (\n          <React.Fragment>\n            <Friends friends={friends} mode={mode} />\n          </React.Fragment>\n        )\n      case \"games\":\n        return (\n          <React.Fragment>\n            <Games games={games} />\n          </React.Fragment>\n        )\n      default:\n        break;\n    }\n  }\n  const onRouteChanged = (newRoute) => {\n    setRoute(newRoute);\n    switch (newRoute) {\n      case \"home\":\n        setMode(\"list\");\n        break;\n\n      default:\n        setMode(\"edit\");\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Navigation onRouteChanged={onRouteChanged} />\n      {\n        renderRoute()\n      }\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}